{"version":3,"sources":["editable-stuff/config.js","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/Footer.jsx","hooks/useIsomorphicLayoutEffect.js","hooks/useScrollPosition.js","hooks/useResizeObserver.js","components/Navbar.jsx","components/home/Skills.jsx","components/home/GetInTouch.jsx","components/home/ExperienceCard.jsx","components/home/Experience.jsx","App.js","serviceWorker.js","index.js","assets/img/walmart.jpeg","editable-stuff/MyProfile.png","assets/img/gbc.png","assets/img/logo-blue.png"],"names":["navBar","mainBody","gradientColors","firstName","middleName","lastName","message","icons","image","url","about","show","heading","imageLink","require","imageSize","resume","cover_letter","academic_credentials","capstone_project","repos","gitHubUsername","reposLength","specificRepos","getInTouch","experiences","Date","getMonth","data","role","companylogo","name","date","MainBody","React","forwardRef","ref","gradient","title","Jumbotron","fluid","id","style","background","backgroundSize","className","Container","cursor","map","icon","index","key","target","rel","href","aria-label","split","pictureLinkRegex","RegExp","AboutMe","link","imgSize","useState","profilePicUrl","setProfilePicUrl","Boolean","showPic","setShowPic","useEffect","test","handleRequest","a","axios","get","response","graphql","user","profile_pic_url_hd","console","error","display","justifyContent","src","alt","width","height","CardButtons","svn_url","Language","languages_url","repo_url","setData","useCallback","array","total_count","push","length","language","Math","trunc","CardFooter","star_count","pushed_at","updated_at","setUpdated_at","handleUpdatetime","diff","getTime","hours","measurement","toString","time","Intl","DateTimeFormat","day","month","year","format","ProjectCard","value","description","stargazers_count","Col","md","Card","Body","Title","as","Text","count","dummyProject","API","Project","username","specfic","allReposAPI","specficReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","repoName","slice","Row","project","Footer","props","backgroundColor","children","useIsomorphicLayoutEffect","window","useLayoutEffect","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps","useResizeObserver","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Navigation","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","navbarDimensions","navBottom","bottom","offsetTop","Navbar","expand","Brand","process","Toggle","aria-controls","Collapse","Nav","Link","Skills","GetInTouch","email","ExperienceCard","Experience","company","Home","App","titleRef","basename","path","exact","component","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.552079a0.chunk.js","sourcesContent":["// Navigation Bar SECTION\nconst navBar = {\n  show: true,\n};\n\n// Main Body SECTION\nconst mainBody = {\n  gradientColors: \"#ffc3a0 ,#4484ce, #1ad7c0, #ff9b11, #9b59b6, #6dd5ed, #a8e063\",\n  firstName: \"Rutik\",\n  middleName: \"\",\n  lastName: \"Patel\",\n  message: \" Passionate Programmer who has a dream to do his best in the field of computers. currently, an honest and hard-working employee at Walmart Canada. .\",\n  icons: [\n    {\n      image: \"fa-github\",\n      url: \"https://github.com/rutikpatel\",\n    },\n    {\n      image: \"fa-facebook\",\n      url: \"https://www.facebook.com/rutikpatel\",\n    },\n    {\n      image: \"fa-instagram\",\n      url: \"https://www.instagram.com/rutikk.patel/\",\n    },\n    {\n      image: \"fa-linkedin\",\n      url: \"https://www.linkedin.com/in/rutik-patel/\",\n    },\n    {\n      image: \"fa-twitter\",\n      url: \"https://www.twitter.com/\",\n    },\n  ],\n};\n\nconst about = {\n  show: true,\n  heading: \"About Me\",\n  imageLink: require(\"../editable-stuff/MyProfile.png\"),\n  imageSize: 390,\n  message:\n    \"My Name is Rutik; I am a graduate of George Brown College in Computer Programming and Analysis Program in 2022. I am very passionate about starting my career in the field of web development. In my leisure time, I used to spend time creating open-source projects as below.\",\n  resume: \"https://drive.google.com/file/d/12swfS0KiBPl4_R-RzKrfA5Qu97mF3Bq9/view?usp=sharing\",\n  cover_letter: \"https://drive.google.com/file/d/1B_-QFlPu8Vu_kyaYuqqwPkJ4rCaS_D2b/view?usp=sharing\" ,\n  academic_credentials: \"https://drive.google.com/file/d/1JgZFB2oqrrT-gQHGp26Y5iFGxDnB2yeH/view?usp=sharing\",\n  capstone_project: \"https://drive.google.com/file/d/1Fxai5ZvOlXgYXisDyu1lxTPo8kABFaBu/view?usp=sharing\"\n};\n\n\nconst repos = {\n  show: true,\n  heading: \"Recent Projects\",\n  gitHubUsername: \"rutikpatel\", \n  reposLength: 2,\n  specificRepos: ['capstone-project', 'Chat-App', 'Employee_management_app ','Weather_App'],\n};\n\n// SKILLS SECTION\nconst skills = {\n  show: true,\n  heading: \"Skills\",\n  hardSkills: [\n    { name: \"Python\", value: 90 },\n    { name: \"SQL\", value: 75 },\n    { name: \"Data Structures\", value: 85 },\n    { name: \"C/C++\", value: 65 },\n    { name: \"JavaScript\", value: 90 },\n    { name: \"React\", value: 65 },\n    { name: \"HTML/CSS\", value: 55 },\n    { name: \"C#\", value: 80 },\n  ],\n  softSkills: [\n    { name: \"Goal-Oriented\", value: 80 },\n    { name: \"Collaboration\", value: 90 },\n    { name: \"Positivity\", value: 75 },\n    { name: \"Adaptability\", value: 85 },\n    { name: \"Problem Solving\", value: 75 },\n    { name: \"Empathy\", value: 90 },\n    { name: \"Organization\", value: 70 },\n    { name: \"Creativity\", value: 90 },\n  ],\n};\n\n// GET IN TOUCH SECTION\nconst getInTouch = {\n  show: true,\n  heading: \"Get In Touch\",\n  message:\n    \"I'm currently looking for full-time Software Engineering.Also available for freelancing. If you have any questions, please feel free to email me at\",\n  email: \"rutikpatel3660@gmail.com\",\n};\n\nconst day = new Date().getMonth()\n  const experiences ={\n    show: true,\n    heading: \"Experiences\",\n    data: [\n      {\n        role: 'Cap-1 Department Mananger',\n        companylogo: require('../assets/img/walmart.jpeg'),\n        name: 'Walmart - Canada',\n        date: 'April-2022 – Present',\n      },{\n        role: 'Associate',\n        companylogo: require('../assets/img/walmart.jpeg'),\n        name: 'Walmart - Canada',\n        date: 'Nov 2020 – April-2022',\n      },\n      {\n        role: 'Tutor',\n        companylogo: require('../assets/img/gbc.png'),\n        name: `Tutoring and Learning center - George Brown College`,\n        date: 'Sep 2021 – April 2022',\n      },\n      {\n        role: 'Web Developer Intern',\n        companylogo: require('../assets/img/logo-blue.png'),\n        name: 'Mantic Labs web solutions ',\n        date: 'June 2018 – Jan 2019',\n      },\n\n    ]\n  }\n  \n  // const experiences = {\n  //   show: true,\n  //   heading: \"Experiences\",\n  //   data: [\n  //     {\n  //       role: 'Associate',\n  //       companylogo: require('../assets/img/walmart.jpeg'),\n  //       name: 'Walmart - Canada',\n  //       date: 'Nov 2020 – Present',\n  //     },\n  //     {\n  //       role: 'Tutor',\n  //       companylogo: require('../assets/img/gbc.png'),\n  //       name: `Tutoring and Learning center - George Brown College`,\n  //       date: 'Sep 2021 – April 2022',\n  //     },\n  //     {\n  //       role: 'Web Developer Intern',\n  //       companylogo: require('../assets/img/logo-blue.png'),\n  //       name: 'Mantic Labs web solutions ',\n  //       date: 'June 2018 – Jan 2019',\n  //     },\n\n  //   ]\n  // }\n\n\n\n\n\nexport { navBar, mainBody, about, repos, skills, getInTouch, experiences };\n","import React from \"react\";\nimport Typist from \"react-typist\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nconst MainBody = React.forwardRef(\n  ({ gradient, title, message, icons }, ref) => {\n    return (\n      <Jumbotron\n        fluid\n        id=\"home\"\n        style={{\n          background: `linear-gradient(${gradient})`,\n          backgroundSize: \"1200% 1200%\",\n        }}\n        className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <Container className=\"text-center\">\n          <h1 ref={ref} className=\"display-1\">\n            {title}\n          </h1>\n          <Typist className=\"lead typist\" cursor={{ show: false }}>\n            {\" \"}\n            {message}\n          </Typist>\n          <div className=\"p-5\">\n            {icons.map((icon, index) => (\n              <a\n                key={`social-icon-${index}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i className={`fab ${icon.image}  fa-3x socialicons`} />\n              </a>\n            ))}\n          </div>\n          <a\n            className=\"btn btn-outline-light btn-lg \"\n            href=\"#aboutme\"\n            role=\"button\"\n            aria-label=\"Learn more about me\"\n          >\n            More about me\n          </a>\n        </Container>\n      </Jumbotron>\n    );\n  }\n);\n\nexport default MainBody;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst pictureLinkRegex = new RegExp(\n  /[(http(s)?):(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/\n);\n\nconst AboutMe = ({ heading, message, link, imgSize, capstone_project , cover_letter, academic_credentials}) => {\n  const [profilePicUrl, setProfilePicUrl] = React.useState(\"\");\n  const [showPic, setShowPic] = React.useState(Boolean(link));\n\n  React.useEffect(() => {\n    if (link && !pictureLinkRegex.test(link)) {\n      handleRequest();\n    } else {\n      setProfilePicUrl(link);\n    }\n  }, [link]);\n\n  const handleRequest = async () => {\n    const instaLink = \"https://www.instagram.com/\";\n    const instaQuery = \"/?__a=1\";\n    try {\n      const response = await axios.get(instaLink + link + instaQuery);\n      setProfilePicUrl(response.data.graphql.user.profile_pic_url_hd);\n    } catch (error) {\n      setShowPic(false);\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n      <div className=\"container container-fluid\">\n        <div className=\"row\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n          <div className={`col-lg-${showPic ? \"7\" : \"12\"}`}>\n            <h2 className=\"display-4 mb-5 text-center\">{heading}</h2>\n            <p className=\"lead text-center\">{message}</p>\n            {cover_letter && (\n              <p className=\"lead text-center\">\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={capstone_project}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  role=\"button\"\n                  aria-label=\"Resume/CV\"\n                >\n                  Capstone Project\n                </a>&nbsp;\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={cover_letter}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  role=\"button\"\n                  aria-label=\"Cover Letter\"\n                >\n                Cover Letter\n                </a>&nbsp;\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={academic_credentials}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  role=\"button\"\n                  aria-label=\"Academic Credentials\"\n                >\n                Academic Credentials\n                </a>\n              </p>\n            )}\n          </div>\n          <div className=\"col-auto d-none d-lg-block align-self-center\">\n            {showPic && (\n              <img\n                className=\"border border-secondary rounded-circle\"\n                src={profilePicUrl}\n                alt=\"profilepicture\"\n                width={350}\n                height={imgSize}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          <Card.Text>{(!description)?\"\":description || <Skeleton count={3} />} </Card.Text>\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {value ? (\n            <CardFooter star_count={stargazers_count} repo_url={svn_url} pushed_at={pushed_at} />\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => {\n  return (\n    <>\n      <a\n        href={`${svn_url}/archive/master.zip`}\n        className=\"btn btn-outline-secondary mr-3\"\n      >\n        <i className=\"fab fa-github\" /> Clone Project\n      </a>\n      <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n        <i className=\"fab fa-github\" /> Repo\n      </a>\n    </>\n  );\n};\n\nconst Language = ({ languages_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(languages_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [languages_url]);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.length\n        ? array.map((language) => (\n            <a\n              key={language} \n              className=\"badge badge-light card-link\"\n              href={repo_url + `/search?l=${language}`}\n              target=\" _blank\"\n            >\n              {language}:{\" \"}\n              {Math.trunc((data[language] / total_count) * 1000) / 10} %\n            </a>\n          ))\n        : \"code yet to be deployed.\"}\n    </div>\n  );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  const [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at(\"just now\");\n      let measurement = hours === 1 ? \"hour\" : \"hours\";\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    } else {\n      const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n      const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n      return setUpdated_at(`on ${time}`);\n    }\n  }, [pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  return (\n    <p className=\"card-text\">\n      <a\n        href={repo_url + \"/stargazers\"}\n        target=\" _blank\"\n        className=\"text-dark text-decoration-none\"\n      >\n        <span className=\"text-dark card-link mr-4\">\n          <i className=\"fab fa-github\" /> Stars{\" \"}\n          <span className=\"badge badge-dark\">{star_count}</span>\n        </span>\n      </a>\n      <small className=\"text-muted\">Updated {updated_at}</small>\n    </p>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null,\n};\nconst API = \"https://api.github.com\";\n\nconst Project = ({ heading, username, length, specfic }) => {\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\n  const specficReposAPI = `${API}/repos/${username}`;\n  const dummyProjectsArr = new Array(length + specfic.length).fill(\n    dummyProject\n  );\n\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n    try {\n      // getting all repos\n      const response = await axios.get(allReposAPI);\n      // slicing to the length\n\n      // adding specified repos\n      try {\n        for (let repoName of specfic) {\n          const response = await axios.get(`${specficReposAPI}/${repoName}`);\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n      repoList.push(...response.data.slice(0, length));\n      // setting projectArray\n      // TODO: remove the duplication.\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, length, specfic, specficReposAPI]);\n\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Footer = (props) => {\n  const bgStyle = { backgroundColor: \"#f5f5f5\" };\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center \">\n      <Container>\n        {props.children}\n        <i className=\"fas fa-code\" /> with <i className=\"fas fa-heart\" /> by{\" \"}\n        <a\n          className=\"badge badge-dark\"\n          rel=\"noopener\"\n          href=\"https://github.com/rutikpatel\"\n          aria-label=\"My GitHub\"\n        >\n          Rutik Patel\n        </a>{\" \"}\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useLayoutEffect, useEffect } from \"react\"\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\n\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null,\n};\n","import React from \"react\";\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = React.useState(null);\n  React.useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { mainBody, repos, about, skills,experiences } from \"../editable-stuff/config.js\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n  const [isTop, setIsTop] = useState(true);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const navbarMenuRef = React.useRef();\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n\n \n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!navbarDimensions) return;\n      currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5\n        ? setIsTop(true)\n        : setIsTop(false);\n      setScrollPosition(currPos.y);\n    },\n    [navBottom]\n  );\n\n  React.useEffect(() => {\n    if (!navbarDimensions) return;\n    navBottom - scrollPosition >= ref.current.offsetTop\n      ? setIsTop(false)\n      : setIsTop(true);\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        !isTop ? \"navbar-white\" : \"navbar-transparent\"\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`${mainBody.firstName} `}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {/* {\n            <Nav.Link className=\"nav-link lead\">\n              <Link to={process.env.PUBLIC_URL + \"/blog\"}>Blog</Link>\n            </Nav.Link>\n          } */}\n          {repos.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#projects\"}\n            >\n              Projects\n            </Nav.Link>\n          )}\n          <Nav.Link\n            className=\"nav-link lead\"\n            href={about.resume}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Resume\n          </Nav.Link>\n           \n          {about.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\n            >\n              About\n            </Nav.Link>\n          )}\n          {\n            experiences.show && (\n              <Nav.Link\n                className=\"nav-link lead\"\n                href={process.env.PUBLIC_URL + \"/#experiences\"}>\n                  Experiences\n              </Nav.Link>\n            )\n          }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport SkillsTab from \"./SkillsTab\";\nimport Row from \"react-bootstrap/Row\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nfunction Skills({ heading, hardSkills, softSkills }) {\n  const skillsTabRef = React.useRef();\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n    },\n    [],\n    skillsTabRef\n  );\n  return (\n    <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n      <Container className=\"p-5 \">\n        <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\n          {heading}\n        </h2>\n        <Tabs\n          className=\"skills-tabs\"\n          defaultActiveKey=\"hard-skills\"\n          id=\"skills-tabs\"\n        >\n          <Tab\n            tabClassName=\"skills-tab lead\"\n            eventKey=\"hard-skills\"\n            title=\"Technical Skills\"\n          >\n            <Row className=\"pt-3 px-1\">\n              <SkillsTab skills={hardSkills} isScrolled={isScrolled} />\n            </Row>\n          </Tab>\n          <Tab\n            tabClassName=\"skills-tab lead\"\n            eventKey=\"soft-skills\"\n            title=\"Soft Skills\"\n          >\n            <Row className=\"pt-3 px-1\">\n              <SkillsTab skills={softSkills} isScrolled={isScrolled} />\n            </Row>\n          </Tab>\n        </Tabs>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\n\nconst GetInTouch = ({ heading, message, email }) => {\n  return (\n    <>\n      <h2 className=\"display-4 pb-3 text-center\">{heading}</h2>\n      <p className=\"lead text-center pb-3\">\n        {message}, <a href={`mailto:${email}`}>{email}</a>.\n      </p>\n    </>\n  );\n};\n\nexport default GetInTouch;\n","import React from 'react';\n\nimport { \n    Col,\n    Card,\n    Row\n } from \"react-bootstrap\";\nconst ExperienceCard = ({data}) => {\n    return ( \n        <Col style={{justifyContent:'space-between'}}>\n            <div className=\"pb-5 text-center\">\n                <p className='h4'>{data.name}</p>\n                <p className=\"lead\">\n                    {data.role}\n                    <br/>\n                    {data.date}\n                </p>\n                \n            </div>\n        </Col>\n     );\n}\n \nexport default ExperienceCard;","import React from 'react';\nimport ExperienceCard from \"./ExperienceCard\";\nimport {\n    Container,\n    Row,\n    Jumbotron\n} from \"react-bootstrap\";\n\nconst Experience = ({experiences}) => {\n    return (  \n        <div id=\"experiences\">\n                <hr/>\n            <section  className='d-flex justify-content-center'>\n                <Container className=\"text-center bg-white\">\n                    <Jumbotron fluid className='card'>\n                        <h2 className=\"display-4 mb-5 text-center\">\n                            {experiences.heading}\n                        </h2>\n                        <Row>\n                            {\n                                experiences.data.map(data => {\n                                    return <ExperienceCard key={data.company} data={data} />\n                                })\n                            }\n                        </Row>\n                    </Jumbotron>\n                </Container>\n\n            </section> \n        </div>\n    );\n}\n \nexport default Experience;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {\n  navBar,\n  mainBody,\n  about,\n  repos,\n  skills,\n  getInTouch,\n  experiences\n} from \"./editable-stuff/config.js\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Project from \"./components/home/Project\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Skills from \"./components/home/Skills\";\nimport GetInTouch from \"./components/home/GetInTouch.jsx\";\n\nimport Experience from \"./components/home/Experience\";\n\nconst Home = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <MainBody\n        gradient={mainBody.gradientColors}\n        title={`${mainBody.firstName} ${mainBody.middleName} ${mainBody.lastName}`}\n        message={mainBody.message}\n        icons={mainBody.icons}\n        ref={ref}\n      />\n      {about.show && (\n        <AboutMe\n          heading={about.heading}\n          message={about.message}\n          link={about.imageLink}\n          imgSize={about.imageSize}\n          capstone_project={about.capstone_project}\n          cover_letter={about.cover_letter}\n          academic_credentials={about.academic_credentials}\n        />\n      )}\n      {\n        experiences.show && (\n          <Experience experiences={experiences}/>\n        )\n      }\n      {repos.show && (\n        <Project\n          heading={repos.heading}\n          username={repos.gitHubUsername}\n          length={repos.reposLength}\n          specfic={repos.specificRepos}\n        />\n      )}\n      {/* {skills.show && (\n        <Skills\n          heading={skills.heading}\n          hardSkills={skills.hardSkills}\n          softSkills={skills.softSkills}\n        />\n      )} */}\n      \n    </>\n  );\n});\n\nconst App = () => {\n  const titleRef = React.useRef();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      {navBar.show && <Navbar ref={titleRef} />}\n      <Route path=\"/\" exact component={() => <Home ref={titleRef} />} />\n      {/* {false && <Route path=\"/blog\" exact component={Blog} />}\n      {false && <Route path=\"/blog/:id\" component={BlogPost} />} */}\n      <Footer>\n        {getInTouch.show && (\n          <GetInTouch\n            heading={getInTouch.heading}\n            message={getInTouch.message}\n            email={getInTouch.email}\n          />\n        )}\n      </Footer>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/walmart.75cb8dae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/MyProfile.f4248d66.png\";","module.exports = __webpack_public_path__ + \"static/media/gbc.c46419d9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-blue.e737ef57.png\";"],"sourceRoot":""}